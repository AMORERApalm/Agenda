
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author victo
 */
public class VistaTrimestres extends javax.swing.JFrame {

    /**
     * Creates new form VistaTrimestres
     */
    Controlador control;
    DefaultTableModel modelo;
    public VistaTrimestres() {
        control = new Controlador();
        modelo = new DefaultTableModel();
        initComponents();
        mostrarCursos();
        mostrarEvaluciones();
        mostrarAsignaturas();
        bgEvaluaciones.add(rbTodas);
        bgEvaluaciones.add(rbUna);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgEvaluaciones = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cCurso = new java.awt.Choice();
        cEvaluacion = new java.awt.Choice();
        jLabel4 = new javax.swing.JLabel();
        cAsignaturas = new java.awt.Choice();
        jLabel5 = new javax.swing.JLabel();
        rbTodas = new javax.swing.JRadioButton();
        rbUna = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        bConsultar = new javax.swing.JButton();
        bSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Estadisticas Alumnos");
        setMinimumSize(new java.awt.Dimension(803, 439));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("SELECCION ASIGNATURA/EVALUACION");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, -1));

        jLabel2.setText("Curso:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        jLabel3.setText("Evaluacion:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        cCurso.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cambiarEvaluacionesyAsignaturas(evt);
            }
        });
        getContentPane().add(cCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 120, -1));

        cEvaluacion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cambioModeloUna(evt);
            }
        });
        getContentPane().add(cEvaluacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 120, -1));

        jLabel4.setText("Asignaturas:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, -1, -1));
        getContentPane().add(cAsignaturas, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 130, -1));

        jLabel5.setText("Evaluaciones:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));

        rbTodas.setText("Todas");
        rbTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeloTodas(evt);
            }
        });
        getContentPane().add(rbTodas, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, -1, -1));

        rbUna.setText("Una");
        rbUna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeloUna(evt);
            }
        });
        getContentPane().add(rbUna, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, -1, -1));

        jLabel6.setText("ESTADISTICAS");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jTable1.setModel(modelo);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 580, 170));

        bConsultar.setText("Consultar");
        bConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarEstadisticas(evt);
            }
        });
        getContentPane().add(bConsultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 250, -1, -1));

        bSalir.setText("Salir");
        bSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir(evt);
            }
        });
        getContentPane().add(bSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 300, 90, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modeloTodas(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeloTodas
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        
        modelo.addColumn("  ");
        for (int i = 0; i < cEvaluacion.getItemCount(); i++) {
            modelo.addColumn(cEvaluacion.getItem(i));
        }
        modelo.addRow(new Object[]{"Sobresaliente"});
        modelo.addRow(new Object[]{"Notables"});
        modelo.addRow(new Object[]{"Bienes"});
        modelo.addRow(new Object[]{"Suficientes"});
        modelo.addRow(new Object[]{"Insuficientes"});
        modelo.addRow(new Object[]{"Total Alumnos"});
    }//GEN-LAST:event_modeloTodas

    private void consultarEstadisticas(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarEstadisticas
        if (rbTodas.isSelected()) {
            try {
                int numAlumnos = control.numAlumnos(cCurso.getSelectedItem());
                
                for (int i = 0;  i < cEvaluacion.getItemCount(); i++) {
                float numNotas = control.numNotas(cEvaluacion.getItem(i), cCurso.getSelectedItem(),cAsignaturas.getSelectedItem());
                ResultSet notas = control.notasCurso(cEvaluacion.getItem(i), cCurso.getSelectedItem(),cAsignaturas.getSelectedItem());
                int insuficiente = 0,suficiente = 0,bien = 0,notable = 0,sobresaliente = 0;
                    if (notas != null) {
                        while (notas.next()) {                    
                            if (notas.getInt("nota") < 5) {
                                insuficiente++;
                            } else if(notas.getInt("nota") == 5){
                                suficiente++;
                            } else if(notas.getInt("nota") == 6){
                                bien++;
                            } else if(notas.getInt("nota") == 7 || notas.getInt("nota") == 8){
                                notable++;
                            } else if(notas.getInt("nota") == 9 || notas.getInt("nota") == 10){
                                sobresaliente++;
                            }
                        }
                        modelo.setValueAt(""+(float)(sobresaliente*100/numNotas)+" %", 0, i+1);
                        modelo.setValueAt(""+(float)(notable*100/numNotas)+" %", 1, i+1);
                        modelo.setValueAt(""+(float)(bien*100/numNotas)+" %", 2, i+1);
                        modelo.setValueAt(""+(float)(suficiente*100/numNotas)+" %", 3, i+1);
                        modelo.setValueAt(""+(float)(insuficiente*100/numNotas)+" %", 4, i+1);
                        modelo.setValueAt(""+numAlumnos, 5, i+1);
                    }
                }   
            } catch (SQLException e) {
                System.out.println("FALLO RELLENAR TABLAS");
            }          
            
        }else if(rbUna.isSelected()){
            try {
                int numAlumnos = control.numAlumnos(cCurso.getSelectedItem());
                for (int i = 0;  i < cEvaluacion.getItemCount(); i++) {
                float numNotas = control.numNotas(cEvaluacion.getSelectedItem(), cCurso.getSelectedItem(),cAsignaturas.getSelectedItem());
                ResultSet notas = control.notasCurso(cEvaluacion.getSelectedItem(), cCurso.getSelectedItem(),cAsignaturas.getSelectedItem());
                int insuficiente = 0,suficiente = 0,bien = 0,notable = 0,sobresaliente = 0;
                    if (notas != null) {
                        while (notas.next()) {                    
                            if (notas.getInt("nota") < 5) {
                                insuficiente++;
                            } else if(notas.getInt("nota") == 5){
                                suficiente++;
                            } else if(notas.getInt("nota") == 6){
                                bien++;
                            } else if(notas.getInt("nota") == 7 || notas.getInt("nota") == 8){
                                notable++;
                            } else if(notas.getInt("nota") == 9 || notas.getInt("nota") == 10){
                                sobresaliente++;
                            }
                        }
                        modelo.setValueAt(""+(float)(sobresaliente*100/numNotas)+" %", 0, 1);
                        modelo.setValueAt(""+(float)(notable*100/numNotas)+" %", 1, 1);
                        modelo.setValueAt(""+(float)(bien*100/numNotas)+" %", 2, 1);
                        modelo.setValueAt(""+(float)(suficiente*100/numNotas)+" %", 3, 1);
                        modelo.setValueAt(""+(float)(insuficiente*100/numNotas)+" %", 4, 1);
                        modelo.setValueAt(""+numAlumnos, 5, 1);
                    }
                }   
            } catch (Exception e) {
            }
        }else{
            System.out.println("NECESITAS ELEGIR UNA EVALUACION");
        }
    }//GEN-LAST:event_consultarEstadisticas

    private void salir(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir
        System.exit(0);
    }//GEN-LAST:event_salir

    private void cambiarEvaluacionesyAsignaturas(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cambiarEvaluacionesyAsignaturas
        mostrarEvaluciones();
        mostrarAsignaturas();
    }//GEN-LAST:event_cambiarEvaluacionesyAsignaturas

    private void modeloUna(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeloUna
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        
        modelo.addColumn("  ");
        modelo.addColumn(cEvaluacion.getSelectedItem());
        modelo.addRow(new Object[]{"Sobresaliente"});
        modelo.addRow(new Object[]{"Notables"});
        modelo.addRow(new Object[]{"Bienes"});
        modelo.addRow(new Object[]{"Suficientes"});
        modelo.addRow(new Object[]{"Insuficientes"});
        modelo.addRow(new Object[]{"Total Alumnos"});
    }//GEN-LAST:event_modeloUna

    private void cambioModeloUna(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cambioModeloUna
        if (rbUna.isSelected()) {
            modelo.setColumnCount(0);
            modelo.setRowCount(0);

            modelo.addColumn("  ");
            modelo.addColumn(cEvaluacion.getSelectedItem());
            modelo.addRow(new Object[]{"Sobresaliente"});
            modelo.addRow(new Object[]{"Notables"});
            modelo.addRow(new Object[]{"Bienes"});
            modelo.addRow(new Object[]{"Suficientes"});
            modelo.addRow(new Object[]{"Insuficientes"});
            modelo.addRow(new Object[]{"Total Alumnos"});
        }
    }//GEN-LAST:event_cambioModeloUna
    
    private void mostrarCursos(){
        ResultSet resultado = control.obtenerCurso();
        try {
            if (resultado != null) {
                while(resultado.next()){
                    cCurso.add(resultado.getString("curso"));
                }
            }else{
                System.out.println("OBJETO VACIO");
            }
        } catch (SQLException e) {
            System.out.println("FALLO MOSTRAR CURSOS");
        }
    }
    
    private void mostrarEvaluciones(){
        cEvaluacion.removeAll();
        ResultSet resultado = control.obtenerEvaluacion(cCurso.getSelectedItem());
        try {
            if (resultado != null) {
                while(resultado.next()){
                    cEvaluacion.add(resultado.getString("evaluacion"));
                }
            }else{
                System.out.println("OBJETO VACIO");
            }
        } catch (SQLException e) {
            System.out.println("FALLO MOSTRAR EVALUACIONES");
        }
    }
    
    
    private void mostrarAsignaturas(){
        cAsignaturas.removeAll();
        ResultSet resultado = control.obtenerAsignaturas(cCurso.getSelectedItem());
        try {
            if (resultado != null) {
                while(resultado.next()){
                    cAsignaturas.add(resultado.getString("asignatura"));
                }
            }else{
                System.out.println("OBJETO VACIO");
            }
        } catch (SQLException e) {
            System.out.println("FALLO MOSTRAR ASIGNATURAS");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaTrimestres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaTrimestres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaTrimestres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaTrimestres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaTrimestres().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConsultar;
    private javax.swing.JButton bSalir;
    private javax.swing.ButtonGroup bgEvaluaciones;
    private java.awt.Choice cAsignaturas;
    private java.awt.Choice cCurso;
    private java.awt.Choice cEvaluacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rbTodas;
    private javax.swing.JRadioButton rbUna;
    // End of variables declaration//GEN-END:variables
}
